apply plugin: 'com.android.application'

// fabric
apply plugin: 'io.fabric'


repositories {
    maven { url 'https://maven.fabric.io/public' }
}

// butterknife
apply plugin: 'com.jakewharton.butterknife'


android {
    compileSdkVersion  rootProject.ext.android.compileSdkVersion
    buildToolsVersion  rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storePassword STORE_PASSWORD
        }
        debug {
            storeFile file(DEBUG_STORE_FILE)
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storePassword STORE_PASSWORD
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG_TYPE", "false"
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG_TYPE", "true"
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    repositories {
        flatDir {
            dirs 'libs'   // aar目录
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies.supportv7
    implementation rootProject.ext.dependencies.constraintlayout
    implementation rootProject.ext.dependencies.recyclerviewv7
  //  testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    //rootshell
    compile(name: 'RootShell-1.6-release', ext: 'aar')
    // utils lib
    compile 'com.joybar.libutils:library:1.1.6'

    // fabric
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
    // butterknife
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}
